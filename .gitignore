# .NET Core related
bin/
obj/
*.user
*.rsuser
*.suo
*.pdb
*.cache
*.log
*.csproj.user
*.dbmdl
*.jfm

# Visual Studio Code specific
.vscode/
.history/

# User-specific files
*.sln.ide
*.sln.docstates
*.sln.cache
*.swp
*.swo

# Build results
*.dll
*.exe
*.app
*.so
*.dylib
*.tmp

# DotNet Console and Web application dependencies
*.db
libman.json

# Rider/JetBrains specific
.idea/
*.sln.iml
*.dotsettings
.idea_modules/

# ASP.NET temporary files
.vs/
wwwroot/lib/
wwwroot/node_modules/
wwwroot/dist/

# NuGet packages
*.nupkg
.nuget/packages/
.nuget/repository/

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Temp files
temp/
tmp/

# Dependency directories
node_modules/
bower_components/

# Uncomment if using yarn
# yarn.lock

# If using npm
package-lock.json

# Publish Output
.publish/

# Generated files by the IDE or OS
.DS_Store
Thumbs.db

# Local environment-specific configuration
appsettings.local-development.json

.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

.idea/*

*.DS_Store

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*
*terraform.tfstate
*terraform.tfstate.backup
*.terraform.lock.hcl
*.tfplan
*tfplan.json
*.terraform/

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

*dist
*node_modules